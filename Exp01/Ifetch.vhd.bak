LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;  -- Tipo de sinal STD_LOGIC e STD_LOGIC_VECTOR
USE IEEE.STD_LOGIC_ARITH.ALL;  -- Operacoes aritmeticas sobre binarios
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
LIBRARY altera_mf;
USE altera_mf.altera_mf_components.ALL; -- Componente de memoria

ENTITY Ifetch IS
	PORT(<Descreva aqui as portas in e out da sua unidade>);
END Ifetch;

ARCHITECTURE behavior OF Ifetch IS
-- Descreva aqui os demais sinais internos
BEGIN
	-- Descricao da Memoria
	data_memory: altsyncram -- Declaracao do compomente de memoria
	GENERIC MAP(
		operation_mode	=> "ROM",
		width_a			=> 32, -- tamanho da palavra (Word)
		widthad_a		=> 8,   -- tamanho do barramento de endereco
		lpm_type			=> "altsyncram",
		outdata_reg_a	=> "UNREGISTERED",
		init_file		=> "program.mif",  -- arquivo com estado inicial
		intended_device_family => "Cyclone")
	PORT MAP(
		address_a	=> <Insira o sinal>,
		q_a			=> <Insira o sinal>,
		clock0		=> <Insira o sinal>);  -- sinal de clock da memoria
	
	-- Descricao do somador
	<Inserir descricao do somador>
	
	-- Descricao do registrador
	<Inserir descricao do registrador PC>
	
   <Inserir qualquer codigo adicional para interligar as partes: registrador, 
	somador e memoria atraves dos sinais internos>
END behavior;
